{"version":3,"file":"static/js/924.1b069a67.chunk.js","mappings":"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","sources":["app/Dashboard/Layouts/DashboardContainer.tsx","../node_modules/@mui/material/internal/svg-icons/ArrowDownward.js","../node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js","../node_modules/@mui/material/TableSortLabel/TableSortLabel.js","../node_modules/@mui/utils/esm/visuallyHidden.js","app/Dashboard/components/EnhancedTable.tsx","app/Dashboard/components/Table.tsx","../node_modules/@mui/icons-material/FilterList.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["import * as React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Link from '@mui/material/Link';\n\n\nfunction handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\n  event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nfunction BreadcrumbLink(props:any) {\n    return (\n        <Link\n        underline=\"hover\"\n        key={props.id}\n        color=\"inherit\"\n        href={props.href}\n        onClick={handleClick}\n      >\n        {props.text}\n      </Link>\n    );\n}\n\nfunction BreadcrumbText(props:any) {\n    return (\n        <Typography key={props.id} color=\"text.primary\">\n            {props.text}\n        </Typography> \n    );\n}\n\nfunction CustomSeparator(props:any) {\n  console.log(props.breadcrumbs.slice(0, -1));\n  console.log(props.breadcrumbs[props.breadcrumbs.length-1]);\n  const breadcrumbs = [ \n    ...props.breadcrumbs.slice(0, -1).map((a:any)=>{\n      return <BreadcrumbLink href={a.href} id={a.id} text={a.text} key={a.id}/>\n    }), \n    <BreadcrumbText \n      id={props.breadcrumbs[props.breadcrumbs.length-1].id} \n      text={props.breadcrumbs[props.breadcrumbs.length-1].text} \n      key={props.breadcrumbs[props.breadcrumbs.length-1].id}\n    />];\n  \n  /*[\n    <Link underline=\"hover\" key=\"1\" color=\"inherit\" href=\"/\" onClick={handleClick}>\n      MUI\n    </Link>,\n    <Link\n      underline=\"hover\"\n      key=\"2\"\n      color=\"inherit\"\n      href=\"/getting-started/installation/\"\n      onClick={handleClick}\n    >\n      Core\n    </Link>,\n    <Typography key=\"3\" color=\"text.primary\">\n      Breadcrumb\n    </Typography>,\n  ];*/\n\n  return (\n    <Stack spacing={2}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {breadcrumbs}\n      </Breadcrumbs>\n    </Stack>\n  );\n}\n\n\n\nfunction DashboardContainer(props:any) {\n  return (\n    <div>\n        <Grid item xs={12} md={12} lg={12}  sx={{m:1}}>\n            <CustomSeparator breadcrumbs={props.breadcrumbs}/>\n        </Grid>\n        <Grid item xs={12} md={12} lg={12}  sx={{m:1}}>\n            {props.children}\n        </Grid>\n    </div>\n  );\n}\n\nexport default DashboardContainer;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc']);\nexport default tableSortLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from '../ButtonBase';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from './tableSortLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active'],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\n\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: theme.palette.text.secondary\n  },\n  '&:hover': {\n    color: theme.palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: theme.palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: theme.palette.text.secondary\n    }\n  }\n}));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none'\n}, ownerState.direction === 'desc' && {\n  transform: 'rotate(0deg)'\n}, ownerState.direction === 'asc' && {\n  transform: 'rotate(180deg)'\n}));\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n\n  const {\n    active = false,\n    children,\n    className,\n    direction = 'asc',\n    hideSortIcon = false,\n    IconComponent = ArrowDownwardIcon\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(TableSortLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    component: \"span\",\n    disableRipple: true,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(TableSortLabelIcon, {\n      as: IconComponent,\n      className: clsx(classes.icon),\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableSortLabel;","const visuallyHidden = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: -1,\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1px'\n};\nexport default visuallyHidden;","import * as React from 'react';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport { visuallyHidden } from '@mui/utils';\nimport { alpha } from '@mui/material/styles';\n\nimport EditIcon from '@mui/icons-material/Edit';\nimport CloseIcon from '@mui/icons-material/Close';\n//import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\n//import RemoveShoppingCartIcon from '@mui/icons-material/RemoveShoppingCart';\n//import AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\n//import ShoppingCartCheckoutIcon from '@mui/icons-material/ShoppingCartCheckout';\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: any) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n  headCells: any\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const headCells = props.headCells;\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\n    props;\n  const createSortHandler =\n    (property: any) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell:any) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell padding=\"checkbox\">\n          <div style={{width: \"100px\", textAlign: \"center\"}}>\n            Actions\n          </div>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n}\n\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Nutrition\n        </Typography>\n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nfunction EnhancedTable(props:any) {\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<any>('');\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const rows = props.rows;\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: any,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n:any) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string|any) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string| any) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={'medium'}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={props.headCells}\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n              rows.slice().sort(getComparator(order, orderBy)) */}\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row[props.headCells[0].id]}\n                      </TableCell>\n                      {/*<TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>*/}\n                      {\n                          props.headCells.slice(1).map((hrow:any, key:number)=>{\n                              return <>\n                                <TableCell key={key} align=\"right\">{row[props.headCells[key+1].id]}</TableCell>\n                              </>\n                          })\n                      }\n\n                      <TableCell align=\"right\">\n                      <div style={{display: \"flex\", width: \"100px\", justifyContent: \"center\"}}>\n                        <a href={`/${row.name}`}><EditIcon /></a>\n                      </div>\n                        \n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (53) * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  );\n}\n\nexport default EnhancedTable;","import * as React from 'react';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport { visuallyHidden } from '@mui/utils';\nimport { alpha } from '@mui/material/styles';\n\nimport DashboardContainer from '../Layouts/DashboardContainer';\n\n\nimport EnhancedTable from './EnhancedTable';\n\n/*\ninterface Data {\n  calories: number;\n  carbs: number;\n  fat: number;\n  name: string;\n  protein: number;\n}\n\nfunction createData(\n  name: string,\n  calories: number,\n  fat: number,\n  carbs: number,\n  protein: number,\n): Data {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n  };\n}\n\n{\n    name: 'Cupcake',\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Dessert (100g serving)',\n  },\n  {\n    id: 'calories',\n    numeric: true,\n    disablePadding: false,\n    label: 'Calories',\n  },\n  {\n    id: 'fat',\n    numeric: true,\n    disablePadding: false,\n    label: 'Fat (g)',\n  },\n  {\n    id: 'carbs',\n    numeric: true,\n    disablePadding: false,\n    label: 'Carbs (g)',\n  },\n  {\n    id: 'protein',\n    numeric: true,\n    disablePadding: false,\n    label: 'Protein (g)',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\n    props;\n  const createSortHandler =\n    (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell padding=\"checkbox\">\n          <div style={{width: \"100px\", textAlign: \"center\"}}>\n            Actions\n          </div>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n}\n\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Nutrition\n        </Typography>\n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nfunction EnhancedTable() {\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('calories');\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Data,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={'medium'}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">\n                      <div style={{display: \"flex\", width: \"100px\", justifyContent: \"center\"}}>\n                        <a href={`/${row.name}`}>Edit</a>\n                      </div>\n                        \n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (53) * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  );\n}\n*/\n/*\n\nEnhancedTableToolbar\nEnhancedTableHead (headCells)\nTableBody (rows)\nTablePagination\n\n\n*/\n\nfunction DashboardTable() {\n  const headCells = [\n    {\n      id: 'name',\n      numeric: false,\n      disablePadding: true,\n      label: 'Dessert (100g serving)',\n    },\n    {\n      id: 'calories',\n      numeric: true,\n      disablePadding: false,\n      label: 'Calories',\n    },\n    {\n      id: 'carbs',\n      numeric: true,\n      disablePadding: false,\n      label: 'Carbs (g)',\n    },\n    {\n      id: 'protein',\n      numeric: true,\n      disablePadding: false,\n      label: 'Protein (g)',\n    },\n  ];\n  const rows = [\n    {\n      name: 'Cupcake',\n      calories: 305,\n      carbs: 67,\n      protein: 4.3,\n    },\n    {\n      name: 'Aupcake',\n      calories: 205,\n      carbs: 37,\n      protein: 8.3,\n    }\n  ];\n  return (\n    <DashboardContainer\n      breadcrumbs={[\n        {id:1, text: 'Dashboard', href:'/'},\n        {id:2, text: 'Table'}\n      ]}\n    >\n      <Paper\n          sx={{\n            p: 0,\n            mt:2,\n            mb: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            boxShadow: 'none',\n            background: 'none',\n          }}\n        >\n          <EnhancedTable \n            headCells={headCells}\n            rows={rows}\n          />\n        </Paper>\n\n\n      \n    </DashboardContainer>\n  );\n}\n\nexport default DashboardTable;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  process.env.NODE_ENV !== \"production\" ? Box.propTypes\n  /* remove-proptypes */\n  = {\n    // ----------------------------- Warning --------------------------------\n    // | These PropTypes are generated from the TypeScript type definitions |\n    // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n    // ----------------------------------------------------------------------\n\n    /**\n     * @ignore\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component used for the root node.\n     * Either a string to use a HTML element or a component.\n     */\n    component: PropTypes.elementType,\n\n    /**\n     * @ignore\n     */\n    sx: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.func])\n  } : void 0;\n  return Box;\n}","import { createBox } from '@mui/system';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../utils';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\n/**\n * @ignore - do not document.\n */\n\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nexport default Box;"],"names":["handleClick","event","preventDefault","console","info","BreadcrumbLink","props","underline","color","href","onClick","text","id","BreadcrumbText","CustomSeparator","log","breadcrumbs","slice","length","map","a","spacing","separator","fontSize","item","xs","md","lg","sx","m","children","createSvgIcon","_jsx","d","getTableSortLabelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableSortLabelRoot","styled","ButtonBase","name","overridesResolver","styles","ownerState","root","active","theme","cursor","display","justifyContent","flexDirection","alignItems","palette","secondary","tableSortLabelClasses","opacity","primary","TableSortLabelIcon","icon","capitalize","direction","_extends","marginRight","marginLeft","transition","transitions","create","duration","shorter","userSelect","transform","React","inProps","ref","useThemeProps","className","hideSortIcon","IconComponent","ArrowDownwardIcon","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","clsx","component","disableRipple","as","border","clip","height","margin","overflow","padding","position","whiteSpace","width","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","EnhancedTableHead","headCells","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","numeric","disablePadding","sortDirection","property","label","Box","visuallyHidden","style","textAlign","EnhancedTableToolbar","Toolbar","pl","sm","pr","bgcolor","alpha","main","action","activatedOpacity","Typography","flex","variant","Tooltip","title","IconButton","Delete","FilterList","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rows","emptyRows","Math","max","Paper","mb","TableContainer","Table","minWidth","size","target","newSelecteds","n","TableBody","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","role","tabIndex","scope","hrow","key","Edit","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","DashboardContainer","p","mt","boxShadow","background","calories","carbs","protein","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","options","defaultTheme","defaultClassName","generateClassName","BoxRoot","styleFunctionSx","useTheme","_extendSxProp","extendSxProp","createBox","createTheme","ClassNameGenerator"],"sourceRoot":""}