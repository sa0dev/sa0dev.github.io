{"version":3,"file":"static/js/849.7e74d46c.chunk.js","mappings":"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","sources":["app/Dashboard/Layouts/DashboardContainer.tsx","app/Dashboard/components/DashboardInfo/components/DashboardInfo.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Link from '@mui/material/Link';\n\n\nfunction handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\n  event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nfunction BreadcrumbLink(props:any) {\n    return (\n        <Link\n        underline=\"hover\"\n        key={props.id}\n        color=\"inherit\"\n        href={props.href}\n        onClick={handleClick}\n      >\n        {props.text}\n      </Link>\n    );\n}\n\nfunction BreadcrumbText(props:any) {\n    return (\n        <Typography key={props.id} color=\"text.primary\">\n            {props.text}\n        </Typography> \n    );\n}\n\nfunction CustomSeparator(props:any) {\n  //console.log(props.breadcrumbs.slice(0, -1));\n  //console.log(props.breadcrumbs[props.breadcrumbs.length-1]);\n  const breadcrumbs = [ \n    ...props.breadcrumbs.slice(0, -1).map((a:any)=>{\n      return <BreadcrumbLink href={a.href} id={a.id} text={a.text} key={a.id}/>\n    }), \n    <BreadcrumbText \n      id={props.breadcrumbs[props.breadcrumbs.length-1].id} \n      text={props.breadcrumbs[props.breadcrumbs.length-1].text} \n      key={props.breadcrumbs[props.breadcrumbs.length-1].id}\n    />];\n  \n  /*[\n    <Link underline=\"hover\" key=\"1\" color=\"inherit\" href=\"/\" onClick={handleClick}>\n      MUI\n    </Link>,\n    <Link\n      underline=\"hover\"\n      key=\"2\"\n      color=\"inherit\"\n      href=\"/getting-started/installation/\"\n      onClick={handleClick}\n    >\n      Core\n    </Link>,\n    <Typography key=\"3\" color=\"text.primary\">\n      Breadcrumb\n    </Typography>,\n  ];*/\n\n  return (\n    <Stack spacing={2}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {breadcrumbs}\n      </Breadcrumbs>\n    </Stack>\n  );\n}\n\n\n\nfunction DashboardContainer(props:any) {\n  return (\n    <div>\n        <Grid item xs={12} md={12} lg={12}  sx={{m:1}}>\n            <CustomSeparator breadcrumbs={props.breadcrumbs}/>\n        </Grid>\n        <Grid item xs={12} md={12} lg={12}  sx={{m:1}}>\n            {props.children}\n        </Grid>\n    </div>\n  );\n}\n\nexport default DashboardContainer;\n","import * as React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Toolbar from '@mui/material/Toolbar';\nimport Paper from '@mui/material/Paper';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Avatar from '@mui/material/Avatar';\nimport PeopleIcon from '@mui/icons-material/People';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\n\nimport { Doughnut, Line } from 'react-chartjs-2';\n\nimport DashboardContainer from '../../../Layouts/DashboardContainer';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top' as const,\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Line Chart - Multiple X Axes',\n    },\n  },\n  scales: {\n    x1: {\n      position: 'top',\n      ticks: {\n        /*callback: function(value, index, values) {\n          return this.getLabelForValue(value).split(';')[1];\n        }*/\n      }\n    },\n    x2: {\n      position: 'bottom',\n      ticks: {\n        /*callback: (value, index, values) => {\n          return this.getLabelForValue(value).split(';')[0];\n        }*/\n      }\n    }\n  }\n};\n\nconst labels = [\"January;2015\", \"February;2015\", \"March;2015\", \"January;2016\", \"February;2016\", \"March;2016\"];\n\nexport const data = {\n  labels,\n  datasets: [\n    {\n      label: 'Red Dataset',\n      data: [12,13,15,16,13],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      xAxisID: 'x1'\n    },\n    {\n      label: 'Blue Dataset',\n      data: [142,13,125,16,133],\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      xAxisID: 'x2'\n    },\n  ],\n};\n\nfunction DashboardInfo() {\n  return (\n\n      <DashboardContainer\n        breadcrumbs={[\n          {id:1, text: 'Home', href:'/'},\n          {id:1, text: 'Dashboard'},\n        ]}\n      >\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={4}>\n            <Card variant=\"outlined\">\n                <CardContent>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6} sm={6}>\n                      <div style={{margin:\"10px\", fontWeight:\"bold\", fontSize:\"20px\"}}>Total Leads</div>\n                      <div style={{margin:\"10px\"}}>10000</div>\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                      <div style={{display:\"flex\", justifyContent:\"right\"}}>\n                        <Avatar sx={{ width: 80, height: 80 }}>\n                          <PeopleIcon />\n                        </Avatar>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n            </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={4}>\n            <Card variant=\"outlined\">\n                <CardContent>\n                  <Grid container spacing={2}>\n                      <Grid item xs={6} sm={6}>\n                        <div style={{margin:\"10px\", fontWeight:\"bold\", fontSize:\"20px\"}}>Fresh Leads</div>\n                        <div style={{margin:\"10px\"}}>10000</div>\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <div style={{display:\"flex\", justifyContent:\"right\"}}>\n                          <Avatar sx={{ width: 80, height: 80 }}>\n                            <PeopleIcon />\n                          </Avatar>\n                        </div>\n                      </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={4}>\n            <Card variant=\"outlined\">\n                <CardContent>\n                  <Grid container spacing={2}>\n                      <Grid item xs={6} sm={6}>\n                        <div style={{margin:\"10px\", fontWeight:\"bold\", fontSize:\"20px\"}}>Active Leads</div>\n                        <div style={{margin:\"10px\"}}>10000</div>\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <div style={{display:\"flex\", justifyContent:\"right\"}}>\n                          <Avatar sx={{ width: 80, height: 80 }}>\n                            <PeopleIcon />\n                          </Avatar>\n                        </div>\n                      </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Grid>\n\n      </Grid>\n\n\n      <Paper\n            sx={{\n              p: 2,\n              mt:2,\n              mb: 2,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '0px',\n              background: \"none\",\n              boxShadow: \"none\",\n            }}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={8} lg={8}>\n              <Card variant=\"outlined\">\n                  <CardContent>\n                    <Line data={data} />\n                  </CardContent>\n              </Card>\n          </Grid>\n\n          <Grid item xs={4} lg={4}>\n              <Card variant=\"outlined\">\n                  <CardContent>\n                    <Doughnut data={\n                        {\n                          datasets: [{\n                            label: 'My First Dataset',\n                            data: [300, 50, 100],\n                            backgroundColor: [\n                              'rgb(255, 99, 132)',\n                              'rgb(54, 162, 235)',\n                              'rgb(255, 205, 86)'\n                            ],\n                            hoverOffset: 4\n                          }]\n                        }\n                      } />\n                  </CardContent>\n              </Card>\n          </Grid>\n\n        </Grid>\n\n      </Paper>\n\n\n\n\n\n\n\n\n        <Paper\n            sx={{\n              p: 2,\n              mt:2,\n              mb: 2,\n              display: 'flex',\n              flexDirection: 'column',\n              boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) 0px 16px 32px -4px;',\n              padding: '0px'\n            }}\n          >\n\n            <Card variant=\"outlined\">\n              <Toolbar\n                sx={{\n                  pl: { sm: 2 },\n                  pr: { xs: 1, sm: 1 },\n                }}\n              >\n                  <Typography\n                    sx={{ flex: '1 1 100%' }}\n                    variant=\"h6\"\n                    id=\"tableTitle\"\n                    component=\"div\"\n                  >\n                    \n                  </Typography>\n                </Toolbar>\n                <CardContent>\n\n\n\n                </CardContent>\n            </Card>\n\n          </Paper>\n      </DashboardContainer>\n  );\n}\n\n{/*\n\n                  {\n                    labels: [\n                      'Red',\n                      'Blue',\n                      'Yellow'\n                    ],\n                    datasets: [{\n                      label: 'My First Dataset',\n                      data: [300, 50, 100],\n                      backgroundColor: [\n                        'rgb(255, 99, 132)',\n                        'rgb(54, 162, 235)',\n                        'rgb(255, 205, 86)'\n                      ],\n                      hoverOffset: 4\n                    }]\n                  }\n\n*/}\n\nexport default DashboardInfo;\n"],"names":["handleClick","event","preventDefault","console","info","BreadcrumbLink","props","underline","color","href","onClick","text","id","BreadcrumbText","CustomSeparator","breadcrumbs","slice","map","a","length","spacing","separator","fontSize","item","xs","md","lg","sx","m","children","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","ArcElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","title","display","scales","x1","ticks","x2","data","labels","datasets","label","borderColor","backgroundColor","xAxisID","container","sm","variant","style","margin","fontWeight","justifyContent","width","height","p","mt","mb","flexDirection","padding","background","boxShadow","hoverOffset","pl","pr","flex","component"],"sourceRoot":""}