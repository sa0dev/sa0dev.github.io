{"version":3,"file":"static/js/840.0287b1be.chunk.js","mappings":"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","sources":["app/Dashboard/Layouts/DashboardContainer.tsx","app/Dashboard/Layouts/PaperHeadingContainer.tsx","app/Dashboard/components/Leads/components/Leads.tsx","app/Dashboard/components/Leads/components/add/AddLead.tsx","app/Dashboard/components/Leads/state/leads.tsx","app/Layouts/FormErrorComponent.tsx","app/lib/ComponentContainer.tsx","app/lib/FormValidationComponent.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Link from '@mui/material/Link';\n\n\nfunction handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\n  event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nfunction BreadcrumbLink(props:any) {\n    return (\n        <Link\n        underline=\"hover\"\n        key={props.id}\n        color=\"inherit\"\n        href={props.href}\n        onClick={handleClick}\n      >\n        {props.text}\n      </Link>\n    );\n}\n\nfunction BreadcrumbText(props:any) {\n    return (\n        <Typography key={props.id} color=\"text.primary\">\n            {props.text}\n        </Typography> \n    );\n}\n\nfunction CustomSeparator(props:any) {\n  //console.log(props.breadcrumbs.slice(0, -1));\n  //console.log(props.breadcrumbs[props.breadcrumbs.length-1]);\n  const breadcrumbs = [ \n    ...props.breadcrumbs.slice(0, -1).map((a:any)=>{\n      return <BreadcrumbLink href={a.href} id={a.id} text={a.text} key={a.id}/>\n    }), \n    <BreadcrumbText \n      id={props.breadcrumbs[props.breadcrumbs.length-1].id} \n      text={props.breadcrumbs[props.breadcrumbs.length-1].text} \n      key={props.breadcrumbs[props.breadcrumbs.length-1].id}\n    />];\n  \n  /*[\n    <Link underline=\"hover\" key=\"1\" color=\"inherit\" href=\"/\" onClick={handleClick}>\n      MUI\n    </Link>,\n    <Link\n      underline=\"hover\"\n      key=\"2\"\n      color=\"inherit\"\n      href=\"/getting-started/installation/\"\n      onClick={handleClick}\n    >\n      Core\n    </Link>,\n    <Typography key=\"3\" color=\"text.primary\">\n      Breadcrumb\n    </Typography>,\n  ];*/\n\n  return (\n    <Stack spacing={2}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {breadcrumbs}\n      </Breadcrumbs>\n    </Stack>\n  );\n}\n\n\n\nfunction DashboardContainer(props:any) {\n  return (\n    <div>\n        <Grid item xs={12} md={12} lg={12}  sx={{m:1}}>\n            <CustomSeparator breadcrumbs={props.breadcrumbs}/>\n        </Grid>\n        <Grid item xs={12} md={12} lg={12}  sx={{m:1}}>\n            {props.children}\n        </Grid>\n    </div>\n  );\n}\n\nexport default DashboardContainer;\n","import * as React from 'react';\nimport Toolbar from '@mui/material/Toolbar';\nimport Paper from '@mui/material/Paper';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\n\nfunction PaperHeadingContainer(props:any){\n  return(\n<Paper\n              sx={{\n                p: 2,\n                mt:2,\n                mb: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) 0px 16px 32px -4px;',\n                padding: '0px'\n              }}\n            >\n\n              <Card variant=\"outlined\">\n                <Toolbar\n                  sx={{\n                    pl: { sm: 2 },\n                    pr: { xs: 1, sm: 1 },\n                  }}\n                >\n                    <Typography\n                      sx={{ flex: '1 1 100%' }}\n                      variant=\"h6\"\n                      id=\"tableTitle\"\n                      component=\"div\"\n                    >\n                      {props.heading}\n                    </Typography>\n                  </Toolbar>\n                  <CardContent>\n                    {props.children}\n                  </CardContent>\n              </Card>\n\n                </Paper>\n  )\n}\n\nexport default PaperHeadingContainer;","import * as React from 'react';\n\nimport Toolbar from '@mui/material/Toolbar';\nimport Paper from '@mui/material/Paper';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\n\nimport DashboardContainer from '../../../Layouts/DashboardContainer';\n\nimport ComponentContainer from '../../../../lib/ComponentContainer';\n\nimport leadSlice from '../state/leads';\n\nfunction DashboardLeads(props:any) {\n  const breadcrumbs = props.breadcrumbs ? props.breadcrumbs : [\n    {id:1, text: 'Dashboard', href:'/'},\n    {id:2, text: 'Leads'}\n  ];\n  return (\n    <ComponentContainer\n      modules={[\n        {\n          id: \"leads\",\n          reducerMap: {\n            leads: leadSlice,\n          },\n          sagas: [\n            \n          ],\n          // Actions to fire when this module is added/removed\n          // initialActions: [],\n          // finalActions: []\n        }\n      ]}\n    >\n      <div>\n\n        <DashboardContainer\n          breadcrumbs={breadcrumbs}\n        >\n          {/*<Paper\n              sx={{\n                p: 2,\n                mt:2,\n                mb: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) 0px 16px 32px -4px;',\n                padding: '0px'\n              }}\n            >\n\n              <Card variant=\"outlined\">\n                <Toolbar\n                  sx={{\n                    pl: { sm: 2 },\n                    pr: { xs: 1, sm: 1 },\n                  }}\n                >\n                    <Typography\n                      sx={{ flex: '1 1 100%' }}\n                      variant=\"h6\"\n                      id=\"tableTitle\"\n                      component=\"div\"\n                    >\n                      Leads\n                    </Typography>\n                  </Toolbar>\n                  <CardContent>\n                    {props.children}\n                  </CardContent>\n              </Card>\n\n                </Paper>\n                \n                */}\n                {props.children}\n        </DashboardContainer>\n\n        </div>\n    </ComponentContainer>\n  );\n}\n\nexport default DashboardLeads;\n","import * as React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Toolbar from '@mui/material/Toolbar';\nimport Paper from '@mui/material/Paper';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport { IMaskInput } from 'react-imask';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport FormErrorComponent from '../../../../../Layouts/FormErrorComponent';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport DashboardLeads from '../Leads';\n\n\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\n\nimport PaperHeadingContainer from '../../../../Layouts/PaperHeadingContainer';\n\nimport {FormErrorSingleComponent} from '../../../../../Layouts/FormErrorComponent';\n\nimport {\nSET_FIRST_NAME,\nSET_LAST_NAME,\nSET_EMAIL,\nSET_SEC_EMAIL,\nSET_GENDER,\nSET_CATEGORY,\nSET_STREAM,\nSET_CONTACT1,\nSET_CONTACT2,\nSET_ADDRESS,\nSET_STATE,\nSET_CITY,\nSET_PINCODE,\nSET_BIRTH_DATE,\nSET_CONTACT_DATE,\nSET_COLLEGE,\nSET_COURSE,\nSET_INPUT_VALID,\nSET_INPUT_NOT_VALID,\nADD_LEAD,\nGET_STATES,\nGET_CITIES,\nGET_COLLEGES,\nGET_COURSES,\n} from \"../../state/leads\";\n\nimport {\n  validateUsername,\n  validateEmail,\n  validateFirstName,\n  validateLastName,\n  validateGender,\n  validateContact,\n  validateAddress,\n  validateUserType,\n} from '../../../../../lib/FormValidationComponent';\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst TextMaskCustom = React.forwardRef<HTMLElement, CustomProps>(\n  function TextMaskCustom(props, ref) {\n    const { onChange, ...other } = props;\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"(#0) 000-000-0000\"\n        definitions={{\n          '#': /[1-9]/,\n        }}\n        onAccept={(value: any) => onChange({ target: { name: props.name, value } })}\n        overwrite\n      />\n    );\n  },\n);\n\ninterface State {\n  textmask: string;\n}\n\n\nfunction AddLead(props:any) {\n  const dispatch = useDispatch();\n  const state = props.state;\n  const [dateValue, setDateValue] = React.useState<Date | null>(null);\n  React.useEffect(()=>{\n    dispatch({type:SET_BIRTH_DATE, payload: {birthDate: dateValue}});\n    dispatch({type:SET_CONTACT_DATE, payload: {contactDate: dateValue}});\n  }, [])\n  return(\n    <>\n    \n      <PaperHeadingContainer heading={\"Add Lead\"}>\n\n        <Grid container spacing={2}>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n                <TextField\n                sx={{mb: 1}}\n                  id=\"email\"\n                  label=\"Email\"\n                  type=\"text\"\n                  fullWidth\n                  value={state.email}\n                  error={false}\n                  maxRows={4} \n                  onChange={(e:any)=>{\n                    dispatch({type:SET_EMAIL, payload: {email: e.target.value}});\n                    return e;\n                  }}\n                />\n              </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n                <TextField\n                sx={{mb: 1}}\n                  id=\"semail\"\n                  label=\"Secondary Email\"\n                  type=\"text\"\n                  value={state.secEmail}\n                  fullWidth\n                  error={false}\n                  maxRows={4} \n                  onChange={(e:any)=>{\n                    dispatch({type:SET_SEC_EMAIL, payload: {email: e.target.value}});\n                    return e;\n                  }}\n                />\n              </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n              <TextField\n              sx={{mb: 1}}\n                id=\"first_name\"\n                label=\"First Name\"\n                type=\"text\"\n                value={state.firstName}\n                fullWidth\n                error={false}\n                maxRows={4} \n                onChange={(e:any)=>{\n                  dispatch({type:SET_FIRST_NAME, payload: {firstName: e.target.value}});\n                  return e;\n                }}\n              />\n            {state.first_name}\n            </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n                <TextField\n                sx={{mb: 1}}\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  type=\"text\"\n                  value={state.lastName}\n                  fullWidth\n                  error={false}\n                  maxRows={4} \n                  onChange={(e:any)=>{\n                    dispatch({type:SET_LAST_NAME, payload: {lastName: e.target.value}});\n                    return e;\n                  }}\n                />\n                \n              </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorSingleComponent error={(state.gender.length > 0) && !state.isValidGender} msg={\"Please provide a valid username.\"}>\n              <Box sx={{ minWidth: 120 }}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"gender-label\">Gender</InputLabel>\n                  <Select\n                    labelId=\"gender-label\"\n                    id=\"gender\"\n                    value={state.gender}\n                    label=\"Gender\"\n                    onChange={(e:any)=>{\n                      if(validateGender(e.target.value)){\n                        dispatch({type:SET_INPUT_VALID,  payload: {input:\"gender\"}});\n                      }\n                      else{\n                        dispatch({type:SET_INPUT_NOT_VALID});\n                      }\n                      dispatch({type:SET_GENDER, payload: {gender: e.target.value}});\n                    }}\n                  >\n                    <MenuItem value={\"male\"}>Male</MenuItem>\n                    <MenuItem value={\"female\"}>Female</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n            </FormErrorSingleComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n              <TextField\n              sx={{mb: 1}}\n                id=\"contact1\"\n                label=\"Primary Contact\"\n                type=\"text\"\n                value={state.contact1}\n                fullWidth\n                error={false}\n                maxRows={4} \n                onChange={(e:any)=>{\n                  dispatch({type:SET_CONTACT1, payload: {contact1: e.target.value}});\n                  return e;\n                }}\n              />\n            </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n                <TextField\n                sx={{mb: 1}}\n                  id=\"contact2\"\n                  label=\"Secondary Contact\"\n                  type=\"text\"\n                  value={state.contact2}\n                  fullWidth\n                  error={false}\n                  maxRows={4} \n                  onChange={(e:any)=>{\n                    dispatch({type:SET_CONTACT2, payload: {contact2: e.target.value}});\n                    return e;\n                  }}\n                />\n              </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n              <TextField\n              multiline\n              sx={{mb: 1}}\n                id=\"address\"\n                label=\"Address\"\n                value={state.address}\n                type=\"text\"\n                fullWidth\n                error={false}\n                maxRows={4} \n                onChange={(e:any)=>{\n                  dispatch({type:SET_ADDRESS, payload: {address: e.target.value}});\n                  return e;\n                }}\n              />\n            </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n              <TextField\n              multiline\n              sx={{mb: 1}}\n                id=\"category\"\n                label=\"Category\"\n                type=\"text\"\n                value={state.category}\n                fullWidth\n                error={false}\n                maxRows={4} \n                onChange={(e:any)=>{\n                  dispatch({type:SET_CATEGORY, payload: {category: e.target.value}});\n                  return e;\n                }}\n              />\n            </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n              <TextField\n              multiline\n              sx={{mb: 1}}\n                id=\"stream\"\n                label=\"Stream\"\n                type=\"text\"\n                value={state.stream}\n                fullWidth\n                error={false}\n                maxRows={4} \n                onChange={(e:any)=>{\n                  dispatch({type:SET_STREAM, payload: {stream: e.target.value}});\n                  return e;\n                }}\n              />\n            </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorSingleComponent error={(state.stateSelected.length > 0) && !state.isValidState} msg={\"Please provide a valid state.\"}>\n              <Box sx={{ minWidth: 120 }}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"state-label\">State</InputLabel>\n                  <Select\n                    labelId=\"state-label\"\n                    id=\"state\"\n                    value={state.stateSelected}\n                    label=\"State\"\n                    onChange={(e:any)=>{\n                      if(validateGender(e.target.value)){\n                        dispatch({type:SET_INPUT_VALID,  payload: {input:\"state\"}});\n                        dispatch(GET_CITIES(e.target.value));\n                      }\n                      else{\n                        dispatch({type:SET_INPUT_NOT_VALID});\n                      }\n                      dispatch({type:SET_STATE, payload: {stateSelected: e.target.value}});\n                    }}\n                  >\n                    {\n                      state.states.map((val:any, key:number)=>{\n                        return <MenuItem value={val.id}>{val.name}</MenuItem>\n                      })\n                    }\n                    \n                  </Select>\n                </FormControl>\n              </Box>\n            </FormErrorSingleComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorSingleComponent error={(state.citySelected.length > 0) && !state.isValidCity} msg={\"Please provide a valid city.\"}>\n              <Box sx={{ minWidth: 120 }}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"city-label\">City</InputLabel>\n                  <Select\n                    labelId=\"city-label\"\n                    id=\"city\"\n                    value={state.citySelected}\n                    label=\"City\"\n                    onChange={(e:any)=>{\n                      if(validateGender(e.target.value)){\n                        dispatch({type:SET_INPUT_VALID,  payload: {input:\"city\"}});\n                      }\n                      else{\n                        dispatch({type:SET_INPUT_NOT_VALID});\n                      }\n                      dispatch({type:SET_CITY, payload: {citySelected: e.target.value}});\n                    }}\n                  >\n                    {\n                      state.cities.map((val:any, key:number)=>{\n                        return <MenuItem value={val.id}>{val.name}</MenuItem>\n                      })\n                    }\n                    \n                  </Select>\n                </FormControl>\n              </Box>\n            </FormErrorSingleComponent>\n          </Grid>\n    \n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n              <TextField\n              multiline\n              sx={{mb: 1}}\n                id=\"pincode\"\n                label=\"Pincode\"\n                value={state.pincode}\n                type=\"text\"\n                fullWidth\n                error={false}\n                maxRows={4} \n                onChange={(e:any)=>{\n                  dispatch({type:SET_PINCODE, payload: {pincode: e.target.value}});\n                  return e;\n                }}\n              />\n            </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent  style={{width: \"100%\"}}>\n\n            <LocalizationProvider dateAdapter={AdapterDateFns} >\n              <DatePicker\n                label=\"Birth Date\"\n                maxDate={new Date('2008-01-01')}\n                inputFormat=\"yyyy-MM-dd\"\n                value={state.birthDate}\n                onChange={(newValue:any) => {\n                  dispatch({type:SET_BIRTH_DATE, payload: {birthDate: newValue}});\n                }}\n                renderInput={(params) => <TextField {...params} fullWidth/>}\n              />\n            </LocalizationProvider>\n\n\n              {/*<TextField\n              multiline\n              sx={{mb: 1}}\n                id=\"birthdate\"\n                label=\"Bith Date\"\n                value={state.birthDate}\n                type=\"text\"\n                fullWidth\n                error={false}\n                maxRows={4} \n                onChange={(e:any)=>{\n                  dispatch({type:SET_BIRTH_DATE, payload: {birthDate: e.target.value}});\n                  return e;\n                }}\n              />*/}\n            </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorComponent>\n\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Contact Date\"\n                minDate={new Date()}\n                inputFormat=\"yyyy-MM-dd\"\n                value={state.contactDate}\n                onChange={(newValue:any) => {\n                  dispatch({type:SET_CONTACT_DATE, payload: {contactDate: newValue}});\n                }}\n                renderInput={(params) => <TextField {...params} fullWidth/>}\n              />\n            </LocalizationProvider>\n\n              {/*<TextField\n              multiline\n              sx={{mb: 1}}\n                id=\"contactdate\"\n                label=\"Contact Date\"\n                type=\"text\"\n                value={state.contactDate}\n                fullWidth\n                error={false}\n                maxRows={4} \n                onChange={(e:any)=>{\n                  dispatch({type:SET_CONTACT_DATE, payload: {contactDate: e.target.value}});\n                  return e;\n                }}\n              />*/}\n            </FormErrorComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorSingleComponent error={(state.collegeSelected.length > 0) && !state.isValidCollegeSelected} msg={\"Please provide a valid college.\"}>\n              <Box sx={{ minWidth: 120 }}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"college-label\">College</InputLabel>\n                  <Select\n                    labelId=\"college-label\"\n                    id=\"college\"\n                    value={state.collegeSelected}\n                    label=\"College\"\n                    onChange={(e:any)=>{\n                      if(validateGender(e.target.value)){\n                        dispatch({type:SET_INPUT_VALID,  payload: {input:\"college\"}});\n                        dispatch(GET_COURSES(e.target.value));\n                      }\n                      else{\n                        dispatch({type:SET_INPUT_NOT_VALID});\n                      }\n                      dispatch({type:SET_COLLEGE, payload: {collegeSelected: e.target.value}});\n                    }}\n                  >\n                    {\n                      state.colleges.map((val:any, key:number)=>{\n                        return <MenuItem value={val.id}>{val.collegeName}</MenuItem>\n                      })\n                    }\n                    \n                  </Select>\n                </FormControl>\n              </Box>\n            </FormErrorSingleComponent>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormErrorSingleComponent error={(state.courseSelected.length > 0) && !state.isValidCourseSelected} msg={\"Please provide a valid course.\"}>\n              <Box sx={{ minWidth: 120 }}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"course-label\">Course</InputLabel>\n                  <Select\n                    labelId=\"course-label\"\n                    id=\"course\"\n                    value={state.courseSelected}\n                    label=\"Course\"\n                    onChange={(e:any)=>{\n                      if(validateGender(e.target.value)){\n                        dispatch({type:SET_INPUT_VALID,  payload: {input:\"course\"}});\n                        \n                      }\n                      else{\n                        dispatch({type:SET_INPUT_NOT_VALID});\n                      }\n                      dispatch({type:SET_COURSE, payload: {courseSelected: e.target.value}});\n                      \n                    }}\n                  >\n                    {\n                      state.courses.map((val:any, key:number)=>{\n                        return <MenuItem value={val.id}>{val.source}</MenuItem>\n                      })\n                    }\n                    \n                  </Select>\n                </FormControl>\n              </Box>\n            </FormErrorSingleComponent>\n          </Grid>\n\n          <Grid item xs={12} md={12} lg={6} sx={{m:1}}>\n            <div style={{display: \"flex\", justifyContent:\"right\", margin: '0px'}}>\n              <Button variant=\"contained\" onClick={()=>{dispatch(ADD_LEAD())}}>Submit</Button>\n            </div>\n          </Grid>\n\n        </Grid>\n\n      </PaperHeadingContainer>\n\n    </>\n  )\n}\n\n\nfunction DashboardAddLead(props:any) {\n  const dispatch = useDispatch();\n  const state = useSelector((state:any)=>state.leads); \n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  React.useEffect(()=>{\n    setLoaded(true);\n    dispatch(GET_STATES());\n    \n    dispatch(GET_COLLEGES());\n    \n  }, [])\n  return (\n    <DashboardLeads\n      breadcrumbs={[\n        {id:1, text: 'Dashboard', href:'/'},\n        {id:2, text: 'Leads', href:'/dashboard/leads'},\n        {id:3, text: 'Add'}\n      ]}\n    >\n      {loaded === true ?\n        <AddLead state={state}/>\n        :\n        null\n      }\n    </DashboardLeads>\n  );\n}\n\nexport default DashboardAddLead;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport axios from \"axios\";\n\nimport {\n    API_LEAD_ADD_URL,\n    API_GET_STATES_URL,\n    API_GET_CITIES_URL,\n    API_GET_COLLEGES_URL,\n    API_GET_COURSES_URL,\n    API_LEAD_LIST_URL,\n} from '../../../../api/env';\n\nconst initialState:any = {\n    data: [],\n    cities: [],\n    states: [],\n    colleges: [],\n    courses: [],\n    listLeadtype: \"fresh\",\n    email: \"\", \n    isValidEmail: false,\n    secEmail: \"\", \n    isValidSecEmail: false,\n    firstName: \"\", \n    isValidFirstName: false,\n    lastName: \"\", \n    isValidLastName: false,\n    gender: \"\", \n    isValidGender: false,\n    category: \"\", \n    isValidCategory: false,\n    stream: \"\", \n    isValidStream: false,\n    contact1: \"\", \n    isValidContact1: false,\n    contact2: \"\",\n    isValidContact2: false, \n    address: \"\", \n    isValidAddress: false,\n    stateSelected: \"\", \n    isValidState: false,\n    citySelected: \"\", \n    isValidCity: false,\n    pincode: \"\", \n    isValidPincode: false,\n    birthDate: \"\", \n    isValidBirthDate: false,\n    contactDate: \"\", \n    isValidContactDate: false,\n    collegeSelected: \"\", \n    isValidCollegeSelected: false,\n    courseSelected: \"\",\n    isValidCourseSelected: false,\n};\n\nconst leadSlice = createSlice({\n    name: 'leads',\n    initialState: initialState,\n    reducers: {\n        SET_DATA: (state, action) => {\n            return {\n                ...state,\n                data: [...action.payload.data],\n            };\n        },\n        SET_CITIES: (state, action) => {\n            return {\n                ...state,\n                cities: action.payload.cities,\n            };\n        },\n\n        SET_STATES: (state, action) => {\n            return {\n                ...state,\n                states: action.payload.states,\n            };\n        },\n        SET_COLLEGES: (state, action) => {\n            return {\n                ...state,\n                colleges: action.payload.colleges,\n            };\n        },\n        \n        SET_COURSES: (state, action) => {\n            return {\n                ...state,\n                courses: action.payload.courses,\n            };\n        },\n\n        SET_EMAIL: (state, action) => {\n            return {\n                ...state,\n                email: action.payload.email,\n            };\n        },\n        SET_SEC_EMAIL: (state, action) => {\n            return {\n                ...state,\n                secEmail: action.payload.email,\n            };\n        },\n        SET_FIRST_NAME: (state, action) => {\n            return {\n                ...state,\n                firstName: action.payload.firstName,\n            };\n        },\n        SET_LAST_NAME: (state, action) => {\n            return {\n                ...state,\n                lastName: action.payload.lastName,\n            };\n        },\n        SET_GENDER: (state, action) => {\n            return {\n                ...state,\n                gender: action.payload.gender,\n            };\n        },\n        SET_CATEGORY: (state, action) => {\n            return {\n                ...state,\n                category: action.payload.category,\n            };\n        },\n        SET_STREAM: (state, action) => {\n            return {\n                ...state,\n                stream: action.payload.stream,\n            };\n        },\n        SET_CONTACT1: (state, action) => {\n            return {\n                ...state,\n                contact1: action.payload.contact1,\n            };\n        },\n        SET_CONTACT2: (state, action) => {\n            return {\n                ...state,\n                contact2: action.payload.contact2,\n            };\n        },\n        SET_ADDRESS: (state, action) => {\n            return {\n                ...state,\n                address: action.payload.address,\n            };\n        },\n        SET_STATE: (state, action) => {\n            return {\n                ...state,\n                stateSelected: action.payload.stateSelected,\n            };\n        },\n        SET_CITY: (state, action) => {\n            return {\n                ...state,\n                citySelected: action.payload.citySelected,\n            };\n        },\n        SET_PINCODE: (state, action) => {\n            return {\n                ...state,\n                pincode: action.payload.pincode,\n            };\n        }, \n        SET_BIRTH_DATE: (state, action) => {\n            return {\n                ...state,\n                birthDate: action.payload.birthDate,\n            };\n        }, \n        SET_CONTACT_DATE: (state, action) => {\n            return {\n                ...state,\n                contactDate: action.payload.contactDate,\n            };\n        }, \n        SET_COLLEGE: (state, action) => {\n            return {\n                ...state,\n                collegeSelected: action.payload.collegeSelected,\n            };\n        },\n        SET_COURSE: (state, action) => {\n            return {\n                ...state,\n                courseSelected: action.payload.courseSelected,\n            };\n        },\n        SET_INPUT_VALID: (state, action) => {\n            switch(action.payload.input){\n                case \"email\":{\n                    return {\n                        ...state,\n                        isValidEmail: true,\n                    };\n                }\n                case \"secEmail\":{\n                    return {\n                        ...state,\n                        isValidSecEmail: true,\n                    };\n                }\n                case \"firstName\":{\n                    return {\n                        ...state,\n                        isValidFirstName: true,\n                    };\n                }\n                case \"lastName\":{\n                    return {\n                        ...state,\n                        isValidLastName: true,\n                    };\n                }\n                case \"gender\":{\n                    return {\n                        ...state,\n                        isValidGender: true,\n                    };\n                }\n                case \"category\":{\n                    return {\n                        ...state,\n                        isValidCategory: true,\n                    };\n                }\n                case \"stream\":{\n                    return {\n                        ...state,\n                        isValidStream: true,\n                    };\n                }\n                case \"contact1\":{\n                    return {\n                        ...state,\n                        isValidContact1: true,\n                    };  \n                }\n                case \"contact2\":{\n                    return {\n                        ...state,\n                        isValidContact2: true,\n                    };\n                }\n                case \"address\":{\n                    return {\n                        ...state,\n                        isValidAddress: true,\n                    };\n                }\n                case \"stateSelected\":{\n                    return {\n                        ...state,\n                        isValidState: true,\n                    };\n                }\n                case \"citySelected\":{\n                    return {\n                        ...state,\n                        isValidCity: true,\n                    };\n                }\n                case \"pincode\":{\n                    return {\n                        ...state,\n                        isValidPincode: true,\n                    };\n                }\n                case \"birthDate\":{\n                    return {\n                        ...state,\n                        isValidBirthDate: true,\n                    };\n                }\n                case \"contactDate\":{\n                    return {\n                        ...state,\n                        isValidContactDate: true,\n                    };\n                }\n                case \"collegeSelected\":{\n                    return {\n                        ...state,\n                        isValidCollegeSelected: true,\n                    };\n                }\n                case \"courseSelected\":{\n                    return {\n                        ...state,\n                        isValidCourseSelected: true,\n                    };\n                }\n            }\n        },\n        SET_INPUT_NOT_VALID: (state, action) => {\n            switch(action.payload.input){\n                case \"email\":{\n                    return {\n                        ...state,\n                        isValidEmail: false,\n                    };\n                }\n                case \"secEmail\":{\n                    return {\n                        ...state,\n                        isValidSecEmail: false,\n                    };\n                }\n                case \"firstName\":{\n                    return {\n                        ...state,\n                        isValidFirstName: false,\n                    };\n                }\n                case \"lastName\":{\n                    return {\n                        ...state,\n                        isValidLastName: false,\n                    };\n                }\n                case \"gender\":{\n                    return {\n                        ...state,\n                        isValidGender: false,\n                    };\n                }\n                case \"category\":{\n                    return {\n                        ...state,\n                        isValidCategory: false,\n                    };\n                }\n                case \"stream\":{\n                    return {\n                        ...state,\n                        isValidStream: false,\n                    };\n                }\n                case \"contact1\":{\n                    return {\n                        ...state,\n                        isValidContact1: false,\n                    };  \n                }\n                case \"contact2\":{\n                    return {\n                        ...state,\n                        isValidContact2: false,\n                    };\n                }\n                case \"address\":{\n                    return {\n                        ...state,\n                        isValidAddress: false,\n                    };\n                }\n                case \"stateSelected\":{\n                    return {\n                        ...state,\n                        isValidState: false,\n                    };\n                }\n                case \"citySelected\":{\n                    return {\n                        ...state,\n                        isValidCity: false,\n                    };\n                }\n                case \"pincode\":{\n                    return {\n                        ...state,\n                        isValidPincode: false,\n                    };\n                }\n                case \"birthDate\":{\n                    return {\n                        ...state,\n                        isValidBirthDate: false,\n                    };\n                }\n                case \"contactDate\":{\n                    return {\n                        ...state,\n                        isValidContactDate: false,\n                    };\n                }\n                case \"collegeSelected\":{\n                    return {\n                        ...state,\n                        isValidCollegeSelected: false,\n                    };\n                }\n                case \"courseSelected\":{\n                    return {\n                        ...state,\n                        isValidCourseSelected: false,\n                    };\n                }\n            }\n        },\n\n    }\n});\n\n\n/*\nName, Mobile no., Email, Stream, City, Course, Status, Actions\n{email}, //\n{secEmail}, //\n{firstName}, //\n{lastName}, //\n{gender}, //\n{category}, \n{stream}, \n{contact1}, //\n{contact2}, //\n{address}, //\n{stateSelected}, \n{citySelected}, \n{pincode}, \n{birthDate}, \n{contactDate}, \n{collegeSelected}, \n{courseSelected}\n*/\n\n\nexport const GET_STATES = ()=>{\n    return (dispatch:any, getState:any)=>{\n        axios.get(API_GET_STATES_URL, {\n            headers: {\n                \"Authorization\": \"Bearer \"+getState().auth.token\n            }\n        })\n        .then((res)=>{\n            if(res.status === 200){\n                const data:any = res.data;\n                if(data.success === true){\n                    console.log(data.data)\n                    dispatch({type: SET_STATES, payload:{states: data.data}})\n                }\n            }\n        })\n        .catch((e)=>{\n            console.log(e);\n        });\n    };\n};\n\nexport const GET_CITIES = (id:number)=>{\n    return (dispatch:any, getState:any)=>{\n        axios.get(API_GET_CITIES_URL+'/'+id, {\n            headers: {\n                \"Authorization\": \"Bearer \"+getState().auth.token\n            }\n        })\n        .then((res)=>{\n            if(res.status === 200){\n                const data:any = res.data;\n                if(data.success === true){\n                    dispatch({type: SET_CITIES, payload:{cities: data.data}})\n                }\n            }\n        })\n        .catch((e)=>{\n            console.log(e);\n        });\n    };\n};\n\nexport const GET_COLLEGES = ()=>{\n    return (dispatch:any, getState:any)=>{\n        axios.get(API_GET_COLLEGES_URL, {\n            headers: {\n                \"Authorization\": \"Bearer \"+getState().auth.token\n            }\n        })\n        .then((res)=>{\n            if(res.status === 200){\n                const data:any = res.data;\n                if(data.success === true){\n                    dispatch({type: SET_COLLEGES, payload:{colleges: data.data}})\n                }\n            }\n        })\n        .catch((e)=>{\n            console.log(e);\n        });\n    };\n};\n\nexport const GET_COURSES = (id:number)=>{\n    return (dispatch:any, getState:any)=>{\n        axios.get(API_GET_COURSES_URL+'/'+id, {\n            headers: {\n                \"Authorization\": \"Bearer \"+getState().auth.token\n            }\n        })\n        .then((res)=>{\n            if(res.status === 200){\n                const data:any = res.data;\n                if(data.success === true){\n                    dispatch({type: SET_COURSES, payload:{courses: data.data}})\n                }\n            }\n        })\n        .catch((e)=>{\n            console.log(e);\n        });\n    };\n};\n\nexport const ADD_LEAD = ()=>{\n    return (dispatch:any, getState:any)=>{\n        var bodyFormData = new FormData();\n        bodyFormData.append('email', getState().leads.email);\n        bodyFormData.append('secEmail', getState().leads.secEmail);\n        bodyFormData.append('firstName', getState().leads.firstName);\n        bodyFormData.append('lastName', getState().leads.lastName);\n        bodyFormData.append('gender', getState().leads.gender);\n        bodyFormData.append('category', getState().leads.category);\n        bodyFormData.append('stream', getState().leads.stream);\n        bodyFormData.append('contact1', getState().leads.contact1.replaceAll(\"(\", \"\").replaceAll(\")\", \"\").replaceAll(\" \", \"\").replaceAll(\"-\", \"\"));\n        bodyFormData.append('contact2', getState().leads.contact2.replaceAll(\"(\", \"\").replaceAll(\")\", \"\").replaceAll(\" \", \"\").replaceAll(\"-\", \"\"));\n        bodyFormData.append('address', getState().leads.address);\n        bodyFormData.append('stateSelected', getState().leads.stateSelected);\n        bodyFormData.append('citySelected', getState().leads.citySelected);\n        bodyFormData.append('pincode', getState().leads.pincode);\n        bodyFormData.append('birthDate', getState().leads.birthDate);\n        bodyFormData.append('contactDate', getState().leads.contactDate);\n        bodyFormData.append('collegeSelected', getState().leads.collegeSelected);\n        bodyFormData.append('courseSelected', getState().leads.courseSelected);\n        axios.post(API_LEAD_ADD_URL, bodyFormData, {\n            headers: {\n                \"Authorization\": \"Bearer \"+getState().auth.token\n            }\n        })\n        .then((res)=>{\n            if(res.status === 200){\n                const data:any = res.data;\n                if(data.success === true){\n                    window.location.href = \"/dashboard/leads/list\"\n                }\n            }\n        })\n        .catch((e)=>{\n            console.log(e);\n        });\n    };\n};\n\nexport const GET_LEADS = ()=>{\n    return (dispatch:any, getState:any)=>{\n        axios.post(API_LEAD_LIST_URL, {\n            leadtype: getState().leads.listLeadtype,\n        }, {\n            headers: {\n                \"Authorization\": \"Bearer \"+getState().auth.token\n            }\n        })\n        .then((res)=>{\n            if(res.status === 200){\n                const data:any = res.data;\n                if(data.success === true){\n                    dispatch({type: SET_DATA, payload:{data: data.data.data.data}})\n                }\n            }\n        })\n        .catch((e)=>{\n            console.log(e);\n        });\n    };\n};\n\nexport const { \n    SET_DATA,\n    SET_CITIES,\n    SET_STATES,\n    SET_FIRST_NAME,\n    SET_LAST_NAME,\n    SET_EMAIL,\n    SET_SEC_EMAIL,\n    SET_GENDER,\n    SET_CATEGORY,\n    SET_STREAM,\n    SET_CONTACT1,\n    SET_CONTACT2,\n    SET_ADDRESS,\n    SET_STATE,\n    SET_CITY,\n    SET_PINCODE,\n    SET_BIRTH_DATE,\n    SET_CONTACT_DATE,\n    SET_COLLEGE,\n    SET_COURSE,\n    SET_INPUT_VALID,\n    SET_INPUT_NOT_VALID,\n    SET_COLLEGES, \n    SET_COURSES,\n} = leadSlice.actions\n\nexport default leadSlice.reducer","import Stack from '@mui/material/Stack';\nimport Alert from '@mui/material/Alert';\nimport Grid from '@mui/material/Grid';\n\nexport const FormErrorSingleComponent = (props:any) => {\n  \n  return (\n    <div style={{marginBottom: '10px'}}>\n    {props.children}\n    {\n      (props.error !== undefined && (props.error === true)) ? \n      <Stack sx={{ width: '100%', marginBottom: '10px' }} spacing={2}>\n        <Alert severity=\"error\">\n            <ul style={{fontSize: \"13px\", fontWeight: 500, margin:\"5px 10px\", padding: \"0px 15px\"}}>\n              <li>\n                    {props.msg}\n              </li>\n            </ul>\n        </Alert>\n      </Stack>:null\n    }\n    </div>\n  );\n};\n\n\nexport const FormErrorComponent = (props:any) => {\n  \n  return (\n    <>\n    {props.children}\n    {\n      (props.errors !== undefined && (props.errors.length > 0)) ? \n      <Stack sx={{ width: '100%' }} spacing={2}>\n        <Alert severity=\"error\">\n            <ul style={{fontSize: \"13px\", fontWeight: 500, margin:\"5px 10px\", padding: \"0px 15px\"}}>\n              {\n                props.errors.map((val:string, key:number)=>{\n                  return <li key={key}>\n                    {val}\n                  </li>\n                })\n              }\n            </ul>\n        </Alert>\n      </Stack>:null\n    }\n    </>\n  );\n};\n\nexport default FormErrorComponent;","import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { Link, navigate } from \"gatsby\"\n//import Loadable from \"react-loadable\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\n//import {InjectReducers} from \"../../store/createStore\";\n\nimport { DynamicModuleLoader } from \"redux-dynamic-modules\";\n\nconst ComponentContainer = (props:any) => {\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  React.useEffect(()=>{\n    setLoaded(true);\n  }, []);\n  return (\n    <>\n      {\n        props.modules !== undefined ?\n        <DynamicModuleLoader modules={props.modules}>\n          { loaded === true ? props.children:null}\n        </DynamicModuleLoader>:\n        \n        <div>\n          { loaded === true ? props.children:null}\n        </div>\n        \n      }\n    </>\n  )\n}\n\nexport default ComponentContainer;","export const validateUsername = (value:string) => {\n    if(value.length >= 3){\n        return /^[a-zA-Z0-9-]+$/.test(value);\n    }\n    return false;\n};\n\nexport const validateEmail = (value:string) => {\n    if(value.length >= 3){\n        return /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(value);\n    }\n    return false;\n};\n\nexport const validatePassword = (value:string) => {\n    /*\n    * Passwords must be \n    * - At least 8 characters long, max length anything\n    * - Include at least 1 lowercase letter\n    * - 1 capital letter\n    * - 1 number\n    * - 1 special character => !@#$%^&*\n    */\n    if(value.length >= 3){\n        return /^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(value);\n    }\n    return false;\n};\n\nexport const validateFirstName = (value:string) => {\n    if(value.length >= 3){\n        return true;\n    }\n    return false;\n};\n\nexport const validateLastName = (value:string) => {\n    if(value.length >= 3){\n        return true;\n    }\n    return false;\n};\n\nexport const validateGender = (value:string) => {\n    if(value !== \"\"){\n        return true;\n    }\n    return false;\n};\n\nexport const validateContact = (value:string) => {\n    if(value.length === 17){\n        return true;\n    }\n    return false;\n};\n\nexport const validateAddress = (value:string) => {\n    if(value.length >= 10){\n        return true;\n    }\n    return false;\n};\n\nexport const validateUserType = (value:string) => {\n    if(value !== \"\"){\n        return true;\n    }\n    return false;\n};\n\n\n\n\n\n"],"names":["handleClick","event","preventDefault","console","info","BreadcrumbLink","props","underline","color","href","onClick","text","id","BreadcrumbText","CustomSeparator","breadcrumbs","slice","map","a","length","spacing","separator","fontSize","item","xs","md","lg","sx","m","children","p","mt","mb","display","flexDirection","boxShadow","padding","variant","pl","sm","pr","flex","component","heading","modules","reducerMap","leads","leadSlice","sagas","AddLead","dispatch","useDispatch","state","React","dateValue","type","SET_BIRTH_DATE","payload","birthDate","SET_CONTACT_DATE","contactDate","container","label","fullWidth","value","email","error","maxRows","onChange","e","SET_EMAIL","target","secEmail","SET_SEC_EMAIL","firstName","SET_FIRST_NAME","first_name","lastName","SET_LAST_NAME","gender","isValidGender","msg","minWidth","labelId","validateGender","SET_INPUT_VALID","input","SET_INPUT_NOT_VALID","SET_GENDER","contact1","SET_CONTACT1","contact2","SET_CONTACT2","multiline","address","SET_ADDRESS","category","SET_CATEGORY","stream","SET_STREAM","stateSelected","isValidState","GET_CITIES","SET_STATE","states","val","key","name","citySelected","isValidCity","SET_CITY","cities","pincode","SET_PINCODE","style","width","dateAdapter","AdapterDateFns","maxDate","Date","inputFormat","newValue","renderInput","params","minDate","collegeSelected","isValidCollegeSelected","GET_COURSES","SET_COLLEGE","colleges","collegeName","courseSelected","isValidCourseSelected","SET_COURSE","courses","source","justifyContent","margin","ADD_LEAD","useSelector","loaded","setLoaded","GET_STATES","GET_COLLEGES","createSlice","initialState","data","listLeadtype","isValidEmail","isValidSecEmail","isValidFirstName","isValidLastName","isValidCategory","isValidStream","isValidContact1","isValidContact2","isValidAddress","isValidPincode","isValidBirthDate","isValidContactDate","reducers","SET_DATA","action","SET_CITIES","SET_STATES","SET_COLLEGES","SET_COURSES","getState","axios","API_GET_STATES_URL","headers","auth","token","then","res","status","success","log","catch","API_GET_CITIES_URL","API_GET_COLLEGES_URL","API_GET_COURSES_URL","bodyFormData","FormData","append","replaceAll","API_LEAD_ADD_URL","window","location","GET_LEADS","API_LEAD_LIST_URL","leadtype","actions","FormErrorSingleComponent","marginBottom","undefined","severity","fontWeight","errors","DynamicModuleLoader","validateUsername","test","validateEmail","validatePassword","validateFirstName","validateLastName","validateContact","validateAddress","validateUserType"],"sourceRoot":""}